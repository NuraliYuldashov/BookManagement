Have questions? Drop us an email learning_and_development@exadel.com
Book Management API
Technical Requirements:
Develop a RESTful API using ASP.NET Core Web API that allows managing books.
Objective
The solution must be uploaded to the public GitHub repository. Add corresponding .gitignore file. A README file can be provided additionally with a brief description of the implemented solution.
Fill out the  Google form  upon completion, and include the link to your repository in the form.
Deadline for Submission: February 23, 2025
Result Submission:
Programming Language: C#
Framework: .NET 8 or .NET 9.
Database: SQL Server (with EF Core or Dapper) or MongoDB (MongoDB C# Driver).
3-layered architecture: models, data access, API (ASP.NET Core Web API).
Design API according to REST: provide correct URIs for endpoints, use proper HTTP status codes for responses.
Use Swagger for API documentation.
implement JWT-based authentication to secure all endpoints, so that only authorized users can access them.
Optional:
Functional requirements
Books model:
title
publication year
author name
views count (number of retrieving book details)
The API should allow 
CRUD operations:
Adding (single and bulk),
updating (single),
soft deleting (single and bulk) books,
Retrieving a list of books (only titles) from the most popular to less popular with pagination.
Retrieving details of a book (all book data).
Validation:
a book cannot be added if the book with the same name exists.
implement other necessary validations as well, so that incorrect data cannot be submitted.
Optional:
Number of times the book was accessed (BookViews)  - tracked in the database - how many times an endpoint “Get book details” is accessed.
Age of the book (YearsSincePublished) - the older books the smaller bonus.
Formula example (can be modified): Popularity Score = BookViews * 0.5 + YearsSincePublished * 2
When retrieving book details, calculate its popularity score on the fly (don’t save in database), taking into account following points:
Optional:
Follow us: 
